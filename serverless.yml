service: sls-user-crud
useDotenv: true

plugins:
  - serverless-esbuild
  - serverless-localstack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs16.x
  stage: local
  region: eu-west-1
  memorySize: 128
  timeout: 12
  vpc: {}
  apiGateway: {}
  endpointType: PRIVATE
  deploymentBucket:
    name: sls-stack-local-user-deployment
  environment: ${file(environment-${self:provider.stage}.yml)}

functions:
  hello:
    handler: ./src/handlers/hello.handler
    events:
      - http:
          path: /hello
          method: get
          cors: true

  migrationUp:
    timeout: 300
    handler: src/handlers/migrations.up
  
  migrationDown:
    timeout: 300
    handler: src/handlers/migrations.down

  # User functions
  createUser:
    handler: ./src/handlers/createUser.handler
    timeout: 300
    events:
      - http:
          path: /users
          method: post
          cors: true
  getUser:
    handler: ./src/handlers/getUser.handler
    timeout: 300
    events:
      - http:
          path: /users/{user_id}
          method: get
          cors: true
  getUsers:
    handler: ./src/handlers/getUsers.handler
    timeout: 300
    events:
      - http:
          path: /users
          method: get
          cors: true
  updateUser:
    handler: ./src/handlers/updateUser.handler
    timeout: 300
    events:
      - http:
          path: /users/{user_id}
          method: put
          cors: true

  # User Task functions
  createUserTask:
    handler: ./src/handlers/createUserTask.handler
    timeout: 300
    events:
      - http:
          path: /users/{user_id}/task
          method: post
          cors: true
  getUserTasks:
    handler: ./src/handlers/getUserTasks.handler
    timeout: 300
    events:
      - http:
          path: /users/{user_id}/task
          method: get
          cors: true
  getTasks:
    handler: ./src/handlers/getTasks.handler
    timeout: 300
    events:
      - http:
          path: /users/{user_id}/tasks
          method: get
          cors: true
  updateUserTask:
    handler: ./src/handlers/updateUserTask.handler
    timeout: 300
    events:
      - http:
          path: /users/{user_id}/task/{task_id}
          method: put
          cors: true
  deleteUserTask:
    handler: ./src/handlers/deleteUserTask.handler
    timeout: 300
    events:
      - http:
          path: /users/{user_id}/task/{task_id}
          method: delete
          cors: true
  

custom:
  esbuild:
    config: "./esbuild.config.js"
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002
    useWorkerThreads: true
  localstack:
    stages:
      - local
    autostart: false
    lambda:
      mountCode: true